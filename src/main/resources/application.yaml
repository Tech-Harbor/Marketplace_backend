spring:
  config:
    import: optional:file:.env[.properties]

  graphql:
    graphiql:
      enabled: true

  socket:
    dest-prefixes: /topic, /specific
    app-prefix: /app
    endpoint: /chat
    topic-prefix: /topic
    notify-prefix: /specific/notify
    error-prefix: /specific/error
    time-to-first-message: 999999

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            provider: google
            scope:
              - email
              - profile
              - openid
            authorization-grant-type: authorization_code
        provider:
          google:
            user-name-attribute: email

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
        mail:
          debug: false
          transport:
            protocol: smtp
          smtp:
            auth: true
            starttls:
              enable: true

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true

  sql:
    init:
      mode: always

cloudinary:
  cloud_name: ${CLOUD_NAME}
  api_key: ${API_KEY}
  api_secret: ${API_SECRET}

jwt:
  key: ${JWT_KEY}
  jwtAccessExpiration: 10080m #7day
  jwtRefreshExpiration: 43200m #30day
  jwtUserDataExpiration: 1440m #1day